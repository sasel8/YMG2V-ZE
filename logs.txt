Started by GitHub push by sasel8
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in C:\ProgramData\Jenkins\.jenkins\workspace\ymg2vize
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Klonla)
[Pipeline] echo
GitHub reposu klonlanıyor...
[Pipeline] git
The recommended git tool is: NONE
No credentials specified
 > git.exe rev-parse --resolve-git-dir C:\ProgramData\Jenkins\.jenkins\workspace\ymg2vize\.git # timeout=10
Fetching changes from the remote Git repository
 > git.exe config remote.origin.url https://github.com/sasel8/YMG2V-ZE.git # timeout=10
Fetching upstream changes from https://github.com/sasel8/YMG2V-ZE.git
 > git.exe --version # timeout=10
 > git --version # 'git version 2.42.0.windows.2'
 > git.exe fetch --tags --force --progress -- https://github.com/sasel8/YMG2V-ZE.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git.exe rev-parse "refs/remotes/origin/main^{commit}" # timeout=10
Checking out Revision 4c9bc178ddb9f465d264ea367b496eb2ebbffbc8 (refs/remotes/origin/main)
 > git.exe config core.sparsecheckout # timeout=10
 > git.exe checkout -f 4c9bc178ddb9f465d264ea367b496eb2ebbffbc8 # timeout=10
 > git.exe branch -a -v --no-abbrev # timeout=10
 > git.exe branch -D main # timeout=10
 > git.exe checkout -b main 4c9bc178ddb9f465d264ea367b496eb2ebbffbc8 # timeout=10
Commit message: "index.html"
 > git.exe rev-list --no-walk 0d1465cd1729ab9d42c03517026445861bfd2b9c # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Docker Image Oluştur)
[Pipeline] echo
Docker image oluşturuluyor...
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\ymg2vize>docker build -t html-sayfam . 
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 102B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:latest
#2 DONE 0.0s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/2] FROM docker.io/library/nginx:latest
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 9.97kB 0.1s done
#5 DONE 0.1s

#4 [1/2] FROM docker.io/library/nginx:latest
#4 CACHED

#6 [2/2] COPY . /usr/share/nginx/html/
#6 DONE 0.1s

#7 exporting to image
#7 exporting layers 0.0s done
#7 writing image sha256:e970d24e6324a75225df14d4a0a9f062b91a20c514aae9833a6bad442e2d6999 done
#7 naming to docker.io/library/html-sayfam done
#7 DONE 0.0s

What's Next?
  1. Sign in to your Docker account → docker login
  2. View a summary of image vulnerabilities and recommendations → docker scout quickview
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Eski Containerı Durdur ve Sil)
[Pipeline] echo
Eski container durduruluyor ve siliniyor...
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\ymg2vize>docker rm -f html-sayfam-container   || true
html-sayfam-container
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Yeni Container Oluştur)
[Pipeline] echo
Yeni container başlatılıyor...
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\ymg2vize>docker run -d -p 8082:80 --name html-sayfam-container html-sayfam 
bb89d36d05aaf41c6813f1a392a5a99c9334a680b0d1124158102eb19c38d08c
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
Pipeline tamamlandı (başarılı veya başarısız)
[Pipeline] echo
Pipeline başarıyla tamamlandı 
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
